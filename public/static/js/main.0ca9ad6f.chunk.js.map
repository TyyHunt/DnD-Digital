{"version":3,"sources":["actions/actionTypes.js","reducers/rootReducer.js","reducers/raceReducers.js","reducers/klassReducers.js","reducers/weaponReducers.js","reducers/userReducers.js","containers/races/racesContainer.js","containers/klasses/klassesContainer.js","containers/weapons/weaponsContainer.js","actions/userActions.js","containers/navbar/navbar.js","containers/user/login.js","components/landingPage.js","containers/user/signup.js","actions/characterActions.js","containers/characters/newCharacter.js","containers/characters/indexCharacters.js","containers/user/userProfile.js","containers/characters/showCharacter.js","actions/klassActions.js","actions/raceActions.js","actions/weaponActions.js","components/routes.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","rootReducer","combineReducers","races","state","action","type","klasses","weapons","user","types","RacesContainer","props","handleClick","event","preventDefault","setState","target","id","Number","value","Dragonborn","Human","Gnome","Dwarf","Elf","Halfling","Tiefling","className","this","map","race","style","height","opacity","key","name","Img","variant","src","img_url","alt","Body","backgroundColor","borderRadius","margin","color","Title","Text","lineHeight","fontSize","bonus","size","speed","Button","onClick","Component","connect","padding","klass","Item","Caption","hit_die","Table","striped","hover","weapon","damage","dmg_type","jwt","require","getProfileFetch","dispatch","token","localStorage","console","log","decodeJwt","decoded","decode","undefined","fetch","method","headers","Accept","then","resp","json","data","characters","message","removeItem","loginUser","userObj","Navigation","logoutUser","history","push","Brand","href","width","Link","Toggle","Collapse","paddingLeft","username","withRouter","Login","handleChange","handleSubmit","userLoginFetch","email","password","loginErrors","bind","length","onSubmit","Group","controlId","Label","Control","placeholder","onChange","disabled","validateForm","userInfo","body","JSON","stringify","setItem","encode","LandingPage","Signup","userPostFetch","password_confirmation","signupErrors","createCharacter","charObj","character","NewCharacter","characterCreateFetch","level","health","str","dex","con","int","wis","cha","user_id","Row","as","Col","md","IndexCharacters","componentWillMount","deleteCharacter","to","UserProfile","componentDidMount","ShowCharacter","characterUpdateFetch","match","params","response","border","setKlasses","setRaces","setWeapons","createBrowserHistory","Routes","getKlasses","getRaces","getWeapons","exact","path","component","KlassesContainer","WeaponsContainer","catch","error","App","Boolean","window","location","hostname","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ca9ad6f.chunk.js","sourcesContent":["export const REQUEST_RACES = \"REQUEST_RACES\"\r\nexport const REQUEST_KLASSES = \"REQUEST_KLASSES\"\r\nexport const REQUEST_WEAPONS = \"REQUEST_WEAPONS\"\r\nexport const LOGIN_USER = \"LOGIN_USER\"\r\nexport const LOGOUT_USER = \"LOGOUT_USER\"\r\nexport const CREATE_CHARACTER = \"CREATE_CHARACTER\"","import { combineReducers } from 'redux';\r\nimport raceReducers from './raceReducers';\r\nimport klassReducers from './klassReducers';\r\nimport weaponReducers from './weaponReducers';\r\nimport userReducers from './userReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  races: raceReducers,\r\n  klasses: klassReducers,\r\n  weapons: weaponReducers,\r\n  user: userReducers\r\n});\r\n\r\nexport default rootReducer;","import * as types from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.REQUEST_RACES:\r\n      return action.races;\r\n      default:\r\n      return state;\r\n  }\r\n}","import * as types from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.REQUEST_KLASSES:\r\n      return action.klasses;\r\n      default:\r\n      return state;\r\n  }\r\n}","import * as types from '../actions/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.REQUEST_WEAPONS:\r\n      return action.weapons;\r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as types from '../actions/actionTypes';\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_USER:\r\n      return  action.user\r\n      case types.LOGOUT_USER:\r\n      return {}\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport '../../containers/containers.css'\r\n\r\nclass RacesContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      Dragonborn: 0,\r\n      'Half-Elf': 0,\r\n      Human: 0,\r\n      Gnome: 0,\r\n      'Half-Orc': 0,\r\n      Dwarf: 0,\r\n      Elf: 0,\r\n      Halfling: 0,\r\n      Tiefling: 0\r\n    }\r\n  }\r\n\r\n\r\n  handleClick = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.id]: (Number(event.target.value)) + 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 className=\"title\">Races</h1>\r\n          <CardColumns>\r\n            {this.props.races.map(race =>\r\n              <Card className='shadow' style={{height: '730px', opacity: 0.85}} key={race.name}>\r\n                <Card.Img variant=\"top\" src={race.img_url} alt={race.name} style={{height: '500px'}}/>\r\n                <Card.Body style={{backgroundColor: 'grey', borderRadius: '25px', margin: '5px', color: 'white', height: '220px'}}>\r\n                  <Card.Title>{race.name}</Card.Title>\r\n                  <Card.Text style={{color: 'white', lineHeight: 2, fontSize: '.9em'}}>\r\n                    Race Bonus: {race.bonus}<br/>\r\n                    Size: {race.size}<br/>\r\n                    Speed: {race.speed}ft<br/>\r\n                    <Button className=\"logoutButton\" variant=\"primary\" onClick={this.handleClick} id={race.name} value={this.state[race.name]}>Like! {this.state[race.name]}</Button>\r\n                  </Card.Text>\r\n                  \r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n          </CardColumns>\r\n        </Container>\r\n      </div>\r\n    )\r\n  } \r\n}\r\nconst mapStateToProps = state => ({\r\n  races: state.races\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(RacesContainer);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\nimport '../../containers/containers.css'\r\n\r\nexport const KlassesContainer = ({ klasses }) =>\r\n  <div className='klassContainer'>\r\n    <h1 className=\"title\">Classes</h1>\r\n    <Container style={{ padding: '10px', opacity: 0.8}}>\r\n      <Carousel style={{ height: '575px' }} >\r\n        {klasses.map(klass =>\r\n          <Carousel.Item key={klass.name}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://i.stack.imgur.com/xDoyU.png\"\r\n              style={{ height: '520px', borderRadius: '25px' }}  \r\n              alt=\"white backdrop\"\r\n            />\r\n            <Carousel.Caption style={{color: 'black'}} >\r\n              <img src={klass.img_url} alt={klass.name} style={{ height: '350px' }}/>\r\n              <h3>{klass.name}</h3>\r\n              <p>Hit Die: {klass.hit_die}</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        )}\r\n      </Carousel>\r\n    </Container>\r\n  </div>\r\n\r\nconst mapStateToProps = ({ klasses }) => ({\r\n  klasses,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(KlassesContainer);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Container } from 'react-bootstrap';\r\n\r\nexport const WeaponsContainer = ({ weapons }) =>\r\n  <div >\r\n    <Container style={{ padding: '10px'}}>\r\n      <h1 className=\"title\">Weapons</h1>\r\n      <Table striped hover variant=\"dark\" style={{backgroundColor: 'grey', borderRadius: '25px'}}>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Weapon</th>\r\n            <th>Damage</th>\r\n            <th>Damage Type</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {weapons.map(weapon =>\r\n          <tr key={weapon.id}>\r\n            <td>{weapon.id}</td>\r\n            <td>{weapon.name}</td>\r\n            <td>{weapon.damage}</td>\r\n            <td>{weapon.dmg_type}</td>\r\n          </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  </div>;\r\n\r\nconst mapStateToProps = ({ weapons }) => ({\r\n  weapons,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(WeaponsContainer);\r\n\r\n","import * as types from './actionTypes';\r\nconst jwt = require('jwt-simple');\r\n\r\nexport const userPostFetch = user => {\r\n  return dispatch => {\r\n    return fetch(\"http://localhost:3001/api/users\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({user})\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n          localStorage.setItem('token',jwt.encode(data, 'secret'))\r\n          dispatch(loginUser(data.user))\r\n      })\r\n  }\r\n}\r\n\r\nexport const userLoginFetch = user => {\r\n  return dispatch => {\r\n    return fetch(\"http://localhost:3001/api/find\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({user})\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        console.log(data)\r\n        localStorage.setItem('token',jwt.encode(data, 'secret'))\r\n        dispatch(loginUser(data))\r\n    })\r\n  }\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n  return dispatch => {\r\n  const token = localStorage.token;\r\n  console.log(localStorage.token)\r\n  const decodeJwt = function() {\r\n    let decoded = jwt.decode(token, 'secret')\r\n    if (decoded.user !== undefined) {\r\n      return decoded.user.id}\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n  //const decodeJwt = token ? (jwt.decode(token, 'secret')) : null ;  \r\n    if (token && decodeJwt) {\r\n    return fetch(`http://localhost:3001/api/users/${decodeJwt()}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        console.log(data.characters)\r\n        if (data.message) {\r\n          localStorage.removeItem(\"token\")\r\n        } else {\r\n          dispatch(loginUser(data))\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => ({\r\n  type: types.LOGOUT_USER\r\n})\r\n\r\nexport const loginUser = userObj => ({\r\n  type: types.LOGIN_USER,\r\n  user: userObj\r\n})\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { logoutUser } from '../../actions/userActions';\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n  handleClick = event => {\r\n    event.preventDefault()\r\n    localStorage.removeItem(\"token\")\r\n    this.props.logoutUser()\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    return (<Navbar variant=\"dark\">\r\n    <Navbar.Brand href=\"/\">\r\n    <img\r\n      alt=\"d20 dice\"\r\n      src=\"https://static.thenounproject.com/png/763027-200.png\"\r\n      width=\"30\"\r\n      height=\"30\"\r\n      className=\"d-inline-block align-top\"\r\n    />\r\n    {' D&D Digital '}\r\n    </Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/\">Home</Nav.Link>\r\n      <Nav.Link href=\"/races\">Races</Nav.Link>\r\n      <Nav.Link href=\"/classes\">Classes</Nav.Link>\r\n      <Nav.Link href=\"/weapons\">Weapons</Nav.Link>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"justify-content-right\">\r\n      <Navbar.Text style={{ paddingLeft: '700px', color: 'white' }}>\r\n          { this.props.user.user ? `Signed in as: ${this.props.user.user.username}` : null }\r\n        </Navbar.Text>\r\n        <Navbar.Text style={{ paddingLeft: '10px', color: 'white' }}>\r\n          { this.props.user.user ? (<Button className=\"logoutButton\" onClick={this.handleClick}>Log Out</Button> ) : null }\r\n        </Navbar.Text>\r\n    </Navbar.Collapse>\r\n    </Nav>\r\n  </Navbar>\r\n  )}\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logoutUser: () => dispatch(logoutUser())\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport {userLoginFetch} from '../../actions/userActions';\r\nimport '../../containers/containers.css'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        email: '',\r\n        password: '',\r\n        loginErrors: ''\r\n      }\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.userLoginFetch(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fixedHeight\">\r\n      <div className=\"loginContainer shadow\">\r\n        <Form onSubmit={this.handleSubmit} className=\"userForm\">\r\n          <h3 className=\"header\">Log In</h3>\r\n          <Form.Text className=\"header\">\r\n            If you don't have an account <a href=\"/signup\" className=\"signUpLink\">Sign Up</a> here!\r\n          </Form.Text>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Button className=\"loginButton\" type=\"submit\" disabled={!this.validateForm()}>\r\n            Log in\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userLoginFetch: userInfo => dispatch(userLoginFetch(userInfo))\r\n})\r\n\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Login from '../containers/user/login';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from \"react-bootstrap\";\r\nimport './components.css'\r\n\r\nclass LandingPage extends Component {\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push('/user')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='homePage' >\r\n        <div className='greeting' >\r\n          <h1 className='mainHeader'>Bring Your Character to the 21st Century</h1>\r\n          { this.props.user.user\r\n            ? <Button className=\"userButton\" type=\"submit\" onClick={this.handleClick}>Go To Your Profile Page</Button>\r\n            : <Login /> }\r\n        </div>\r\n      </div>\r\n    )\r\n  }}\r\n\r\n  const mapStateToProps = state => ({\r\n    user: state.user\r\n  });\r\n\r\nexport default withRouter(connect(mapStateToProps)(LandingPage));","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport {userPostFetch} from '../../actions/userActions';\r\nimport '../../containers/containers.css'\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password_confirmation: \"\",\r\n        signupErrors: ''\r\n      }\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 \r\n      && this.state.password.length > 0 \r\n      && this.state.password_confirmation.length > 0 \r\n      && this.state.username.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.userPostFetch(this.state);\r\n    this.props.history.push('/user')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fixedHeight\">\r\n      <div className=\"signupContainer shadow\">\r\n        <Form onSubmit={this.handleSubmit} className=\"userForm\">\r\n          <h3 className=\"header\">Sign Up</h3>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Create Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password_confirmation\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={this.state.password_confirmation} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Button className=\"loginButton\" type=\"submit\" disabled={!this.validateForm()}>\r\n            Log in\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userPostFetch: userInfo => dispatch(userPostFetch(userInfo))\r\n})\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Signup));\r\n","import * as types from './actionTypes';\r\n\r\nexport const characterCreateFetch = character => {\r\n  console.log('C')\r\n  return dispatch => {\r\n    return fetch(\"http://localhost:3001/api/characters\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({character})\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        console.log('D')\r\n          dispatch(createCharacter(data.character))\r\n      })\r\n  }\r\n}\r\n\r\nexport const characterUpdateFetch = (id, character) => {\r\n  return dispatch => {\r\n    return fetch(\"http://localhost:3001/api/characters/\" + id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({character})\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n          console.log(data)\r\n          dispatch(createCharacter(data.character))\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const createCharacter = charObj => ({\r\n  type: types.CREATE_CHARACTER,\r\n  character: charObj\r\n})\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Col } from 'reactstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {characterCreateFetch} from '../../actions/characterActions';\r\nimport '../../containers/containers.css'\r\n\r\nclass NewCharacter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        name: '',\r\n        level: '',\r\n        health: 0,\r\n        str: 0,\r\n        dex: 0,\r\n        con: 0,\r\n        int: 0,\r\n        wis: 0,\r\n        cha: 0,\r\n        user_id: this.props.user.id,\r\n        race: '',\r\n        klass: '',\r\n        weapon: '',\r\n        loginErrors: ''\r\n      }\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  \r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.characterCreateFetch(this.state);\r\n    this.props.history.push('/user');\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"characterHeight\">\r\n      <div className=\"characterContainer shadow\">\r\n        <Form onSubmit={this.handleSubmit} className=\"characterForm\">\r\n          <h3 className=\"header\">Create Character</h3>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"level\">\r\n              <Form.Label>Level</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Level\"\r\n                name=\"level\"\r\n                value={this.state.level}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"health\">\r\n              <Form.Label>Health</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Health\"\r\n                name=\"health\"\r\n                value={this.state.health}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <hr className=\"shadow\"/>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"str\">\r\n              <Form.Label>Strength</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Str\"\r\n                name=\"str\"\r\n                value={this.state.str}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"dex\">\r\n              <Form.Label>Dexterity</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Dex\"\r\n                name=\"dex\"\r\n                value={this.state.dex}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"con\">\r\n              <Form.Label>Constitution</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Con\"\r\n                name=\"con\"\r\n                value={this.state.con}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"int\">\r\n              <Form.Label>Intelligence</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Int\"\r\n                name=\"int\"\r\n                value={this.state.int}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"wis\">\r\n              <Form.Label>Wisdom</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Wis\"\r\n                name=\"wis\"\r\n                value={this.state.wis}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"cha\">\r\n              <Form.Label>Charisma</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Cha\"\r\n                name=\"cha\"\r\n                value={this.state.cha}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <hr className=\"shadow\"/>\r\n          <Form.Group controlId=\"race\">\r\n            <Form.Label>Race</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.handleChange}>\r\n              <option key=\"placeholder\">Choose a Race...</option>\r\n              {this.props.races.map(race =>\r\n              <option key={race.name} value={race.name}>{race.name}</option>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <hr className=\"shadow\"/>\r\n          <Form.Group controlId=\"klass\">\r\n            <Form.Label>Class</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.handleChange}>\r\n              <option key=\"placeholder\">Choose a Class...</option>\r\n              {this.props.klasses.map(klass =>\r\n              <option key={klass.name} value={klass.name}>{klass.name}</option>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <hr className=\"shadow\"/>\r\n          <Form.Group controlId=\"weapon\">\r\n            <Form.Label>Weapon</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.handleChange}>\r\n              <option key=\"placeholder\">Choose a Weapon...</option>\r\n              {this.props.weapons.map(weapons =>\r\n              <option key={weapons.name} value={weapons.name}>{weapons.name}</option>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button className=\"loginButton\" type=\"submit\" >\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user.user,\r\n  races: state.races,\r\n  klasses: state.klasses,\r\n  weapons: state.weapons\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  characterCreateFetch: userInfo => dispatch(characterCreateFetch(userInfo))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewCharacter));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { getProfileFetch } from '../../actions/userActions';\r\nimport '../../containers/containers.css'\r\n\r\nclass IndexCharacters extends Component {\r\n\r\n  componentWillMount = () => {\r\n    this.props.getProfileFetch();\r\n  }\r\n\r\n\r\n  deleteCharacter = event => {\r\n    event.preventDefault()\r\n  }\r\n  \r\n  render() {\r\n    console.log(this.props.user.characters);\r\n    return (\r\n      \r\n      <Container>\r\n        <hr className=\"characterHeaderHR\"/>\r\n          {this.props.characters.map(character =>\r\n          <div key={character.id}>\r\n            <div key={character.id}>\r\n              <Row className=\"individualCharacter\">\r\n                <Col md={4}>\r\n                  <Image src=\"https://cdn.sstatic.net/Sites/rpg/img/apple-touch-icon@2.png?v=4c03147b9ffe\" alt={character.name} className=\"charactersIndexImg\"  />\r\n                </Col>\r\n                <Col md={8} className=\"characterInfo\">\r\n                  <h1><em>{character.name}</em></h1>\r\n                  <p>level: {character.level}</p>\r\n                  <p>health: {character.health}</p>\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <NavLink to={`/characters/${character.id}`}>\r\n                        <Button className=\"loadCharacterButton\" type=\"submit\" >\r\n                          Load Character\r\n                        </Button>\r\n                      </NavLink>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <hr className=\"characterIndexHR\"/>\r\n          </div>\r\n\r\n          )}\r\n          <div className=\"extraSpace\"></div>\r\n        </Container>\r\n    )}\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  characters: state.user.characters,\r\n  races: state.races,\r\n  klasses: state.klasses\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(IndexCharacters));\r\n","import React, { Component } from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport IndexCharacters from '../characters/indexCharacters';\r\nimport { getProfileFetch } from '../../actions/userActions';\r\nimport { connect } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nclass UserProfile extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.getProfileFetch();\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.push('/characters/new')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n  <div>\r\n    <Container >\r\n      <Button className=\"userButton\" type=\"submit\" onClick={this.handleClick}>Add A Character</Button>\r\n      <IndexCharacters />\r\n    </Container>\r\n  </div>\r\n  )}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n})\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(UserProfile));","import React, { Component} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Col } from 'reactstrap';\r\nimport {characterUpdateFetch} from '../../actions/characterActions';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass ShowCharacter extends Component {\r\n  state = {}\r\n\r\nhandleChange = event => {\r\n  this.setState({\r\n    [event.target.id]: event.target.value\r\n  });\r\n}\r\n\r\nhandleSubmit = event => {\r\n  event.preventDefault();\r\n  console.log(this.state);\r\n  this.props.characterUpdateFetch(this.state.id, this.state);\r\n}\r\n\r\ncomponentDidMount () {\r\n  const { id } = this.props.match.params\r\n\r\n    fetch(`/characters/${id}`)\r\n      .then(response => response.json())\r\n      .then((character) => {\r\n        this.setState(() => (character))\r\n        console.log(this.state)\r\n      })\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <Container>\r\n    <h5 style={{color: '#fff'}}>*Edit Character Sheet When Needed</h5>\r\n    <div className=\"characterShowPage\">\r\n    <Form onSubmit={this.handleSubmit} className=\"updateShowForm\">\r\n          <Form.Row className=\"characterName\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"name\">\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder={this.state.name}\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n              </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"characterKlass\">\r\n            <Form.Group as={Col} md=\"3\" controlId=\"klass\">\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                placeholder={this.state.klass}\r\n                name=\"klass\"\r\n                value={this.state.klass}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"2\" controlId=\"level\">\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"number\"\r\n                placeholder={this.state.level}\r\n                name=\"level\"\r\n                value={this.state.level}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"characterHealth\">\r\n            <Form.Group as={Col} md=\"2\" controlId=\"health\">\r\n              <Form.Control\r\n                size=\"sm\"\r\n                type=\"number\"\r\n                placeholder={this.state.health}\r\n                name=\"health\"\r\n                value={this.state.health}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"statRow\">\r\n            <Form.Group as={Col} md=\"2\" controlId=\"str\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.str}\r\n                name=\"str\"\r\n                value={this.state.str}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"statPadding\">\r\n            <Form.Group as={Col} md=\"2\" controlId=\"int\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.int}\r\n                name=\"int\"\r\n                value={this.state.int}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"2\" controlId=\"wis\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.wis}\r\n                name=\"wis\"\r\n                value={this.state.wis}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"statPadding\">\r\n            <Form.Group as={Col} md=\"2\" controlId=\"dex\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.dex}\r\n                name=\"dex\"\r\n                value={this.state.dex}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"statPadding\">\r\n            <Form.Group as={Col} md=\"2\" controlId=\"con\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.con}\r\n                name=\"con\"\r\n                value={this.state.con}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"2\" controlId=\"cha\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder={this.state.cha}\r\n                name=\"cha\"\r\n                value={this.state.cha}\r\n                onChange={this.handleChange}\r\n                style={{border: 'none'}}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Button className=\"characterControlButton\" type=\"submit\" >\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n  </Container>\r\n  )}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  characterUpdateFetch: (id, userInfo) => dispatch(characterUpdateFetch(id, userInfo))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShowCharacter);","import * as types from './actionTypes'\r\n\r\nexport const getKlasses = () => {\r\n  return dispatch => {\r\n    return fetch('/klasses')\r\n      .then(response => response.json())\r\n      .then(klasses => {\r\n        dispatch(setKlasses(klasses))\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport const setKlasses = klasses => {\r\n  return {\r\n    type: types.REQUEST_KLASSES,\r\n    klasses: klasses\r\n  }\r\n}","import * as types from './actionTypes'\r\n\r\nexport const getRaces = () => {\r\n  return dispatch => {\r\n    return fetch('/races')\r\n      .then(response => response.json())\r\n      .then(races => {\r\n        dispatch(setRaces(races))\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n} \r\n\r\nexport const setRaces = races => {\r\n  return {\r\n    type: types.REQUEST_RACES,\r\n    races: races\r\n  }\r\n}","import * as types from './actionTypes'\r\n\r\nexport const getWeapons = () => {\r\n  return dispatch => {\r\n    return fetch('/weapons')\r\n      .then(response => response.json())\r\n      .then(weapons => {\r\n        dispatch(setWeapons(weapons))\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport const setWeapons = weapons => {\r\n  return {\r\n    type: types.REQUEST_WEAPONS,\r\n    weapons: weapons\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport RacesContainer from '../containers/races/racesContainer';\r\nimport KlassesContainer from '../containers/klasses/klassesContainer';\r\nimport WeaponsContainer from '../containers/weapons/weaponsContainer';\r\nimport Navigation from '../containers/navbar/navbar';\r\nimport LandingPage from './landingPage';\r\nimport Signup from '../containers/user/signup';\r\nimport NewCharacter from '../containers/characters/newCharacter';\r\nimport UserProfile from '../containers/user/userProfile';\r\nimport ShowCharacter from '../containers/characters/showCharacter';\r\nimport { getProfileFetch } from '../actions/userActions';\r\nimport { getKlasses } from '../actions/klassActions';\r\nimport { getRaces } from '../actions/raceActions';\r\nimport { getWeapons } from '../actions/weaponActions';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nclass Routes extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.getProfileFetch();\r\n    this.props.getKlasses();\r\n    this.props.getRaces();\r\n    this.props.getWeapons()\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"backgroundImage\">\r\n        <Router history={history}>\r\n          <Navigation />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route exact path=\"/races\" component={RacesContainer} />\r\n            <Route exact path=\"/classes\" component={KlassesContainer} />\r\n            <Route exact path=\"/weapons\" component={WeaponsContainer} />\r\n            <Route exact path=\"/signup\" component={Signup}/>\r\n            <Route exact path=\"/user\" component={UserProfile}/>\r\n            <Route exact path=\"/characters/new\" component={NewCharacter} />\r\n            <Route exact path=\"/characters/:id\" component={ShowCharacter} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileFetch: () => dispatch(getProfileFetch()),\r\n  getKlasses: () => dispatch(getKlasses()),\r\n  getRaces: () => dispatch(getRaces()),\r\n  getWeapons: () => dispatch(getWeapons())\r\n})\r\n\r\n//userPostFetch: userInfo => dispatch(userPostFetch(userInfo)),\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);","import React, { Component } from 'react';\nimport './App.css';\n//import RacesContainer from './containers/races/racesContainer';\n//import KlassesContainer from './containers/klasses/klassesContainer';\n//import WeaponsContainer from './containers/weapons/weaponsContainer';\n//import Navigation from './containers/navbar/navbar';\nimport Routes from './components/routes'\n\nclass App extends Component {\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport App from './App';\n//import { loadSeed } from './actions/loadAction';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n//store.dispatch(loadSeed());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}